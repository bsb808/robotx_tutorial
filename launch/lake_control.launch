<?xml version="1.0"?>

<launch>

  <param name="use_sim_time" value="true" />

 <!-- For setting debug level to debug   -->
  <env name="ROSCONSOLE_CONFIG_FILE" 
       value="$(find robotx_tutorial)/config/custom_rosconsole.conf"/>

  <!-- Command line arguments -->
  <arg name="world" default="lake_buoy.world" />
  <arg name="name" default="kingfisher" />
  <arg name="imu" default="true" />
  <arg name="gps" default="true" />
  <arg name="p3d" default="true" />
  <arg name="microstrain" default="false" />
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="6.0" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="0" />

  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--<arg name="world_name" value="$(find kingfisher_gazebo)/worlds/lake_buoy.world"/>-->
    <arg name="world_name" value="$(find kingfisher_gazebo)/worlds/$(arg world)"/>
    <arg name="verbose" value="true"/>
  </include>
  
  <arg name="urdf" default="$(find kingfisher_gazebo)/urdf/base_gazebo.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg urdf) imu:=$(arg imu) gps:=$(arg gps) microstrain:=$(arg microstrain) p3d:=$(arg p3d)"/>
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  
  <!-- Spawn robot in gazebo -->
  <node name="spawn_kingfisher_model" pkg="gazebo_ros" type="spawn_model"
	args="-x $(arg x) -y $(arg y) -z $(arg z) 
	      -R $(arg R) -P $(arg P) -Y $(arg Y)
	      -unpause -urdf -param robot_description -model mobile_base"/>

 <!-- Takes output from P3D Gazebo plugin to simulate Microstrain Nav. -->
  <node pkg="kingfisher_gazebo" type="p3d2nav.py" name="nav_sim">
    <param name="gazebo_origin_lat" value="36.596524" type="double" />
    <param name="gazebo_origin_long" value="-121.888169" type="double" />
  </node>

  <!-- Converts Lat/Lon from Microstrain to local X/Y -->
  <node pkg="geonav_transform" type="geonav_transform_node" name="geonav_transform" clear_params="true" output="screen">
    <!-- Datum as latitude, longitude [decimal deg.], yaw [ENU, degrees] -->
    <rosparam param="datum">[36.595, -121.89, 0.0]</rosparam>
    <param name="base_link_frame_id" value="base_footprint" />
  </node>
  
 </launch>
